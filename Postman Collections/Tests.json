{
  "info": {
    "_postman_id": "d70f144e-9170-4730-b59d-69bdf8c518d2",
    "name": "Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "e6e160e1-676e-4f88-aa67-9dda62fe8477",
      "name": "Runner",
      "description": "",
      "item": [
        {
          "_postman_id": "7caeb9ca-51a1-4b36-ac6c-faae0daa23b7",
          "name": "00 - Setup",
          "description": "",
          "item": [
            {
              "_postman_id": "d0e8f98c-61dd-4494-920a-71dbee66d22a",
              "name": "00.01 - Get Service Token",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c850b5aa-6d07-47c4-9fee-e081f35f4bec",
                    "exec": [
                      "var data = JSON.parse(responseBody);",
                      "",
                      "postman.setEnvironmentVariable(\"ServiceToken\", data.access_token);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Access Token Not Null\"] = data.access_token !== \"\" && data.access_token !== null;"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials",
                      "description": "",
                      "type": "text"
                    },
                    {
                      "key": "client_id",
                      "value": "{{AuthClientKey}}",
                      "description": "",
                      "type": "text"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{AuthClientSecret}}",
                      "description": "",
                      "type": "text"
                    }
                  ]
                },
                "url": "https://accounts{{UriSuffix}}.iqmetrix.net/v1/oauth2/token"
              },
              "response": []
            },
            {
              "_postman_id": "f5119095-af43-482e-97f6-1d837d91607d",
              "name": "00.02 - Get User Token",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "65f107a2-d826-4cef-9626-7820be56f8a0",
                    "exec": [
                      "var data = JSON.parse(responseBody);",
                      "",
                      "postman.setEnvironmentVariable(\"AuthToken\", data.access_token);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Access Token Not Null\"] = data.access_token !== \"\" && data.access_token !== null;"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "grant_type",
                      "value": "password",
                      "description": "",
                      "type": "text"
                    },
                    {
                      "key": "client_id",
                      "value": "{{AuthClientKey}}",
                      "description": "",
                      "type": "text"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{AuthClientSecret}}",
                      "description": "",
                      "type": "text"
                    },
                    {
                      "key": "username",
                      "value": "{{Username}}@{{Database}}",
                      "description": "",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "{{Password}}",
                      "description": "",
                      "type": "text"
                    }
                  ]
                },
                "url": "https://accounts{{UriSuffix}}.iqmetrix.net/v1/oauth2/token"
              },
              "response": []
            },
            {
              "_postman_id": "1c6c37a6-3e63-42cc-b617-39199fbdd320",
              "name": "00.03 - Get Bad User Token",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "739235fa-9726-4133-ac6e-bd620265f931",
                    "exec": [
                      "var data = JSON.parse(responseBody);",
                      "",
                      "postman.setEnvironmentVariable(\"BadAuthToken\", data.access_token + 'z');",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Access Token Not Null\"] = data.access_token !== \"\" && data.access_token !== null;"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "grant_type",
                      "value": "password",
                      "description": "",
                      "type": "text"
                    },
                    {
                      "key": "client_id",
                      "value": "{{AuthClientKey}}",
                      "description": "",
                      "type": "text"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{AuthClientSecret}}",
                      "description": "",
                      "type": "text"
                    },
                    {
                      "key": "username",
                      "value": "{{Username}}@{{Database}}",
                      "description": "",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "{{Password}}",
                      "description": "",
                      "type": "text"
                    }
                  ]
                },
                "url": "https://accounts{{UriSuffix}}.iqmetrix.net/v1/oauth2/token"
              },
              "response": []
            },
            {
              "_postman_id": "72f142c4-5f3d-4bba-9fbb-6ae4a85d3b57",
              "name": "00.04 - Get User Token For Wrong DB",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "65f107a2-d826-4cef-9626-7820be56f8a0",
                    "exec": [
                      "var data = JSON.parse(responseBody);",
                      "",
                      "postman.setEnvironmentVariable(\"WrongDbAuthToken\", data.access_token);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Access Token Not Null\"] = data.access_token !== \"\" && data.access_token !== null;"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": "",
                      "key": "grant_type",
                      "type": "text",
                      "value": "password"
                    },
                    {
                      "description": "",
                      "key": "client_id",
                      "type": "text",
                      "value": "{{AuthClientKey}}"
                    },
                    {
                      "description": "",
                      "key": "client_secret",
                      "type": "text",
                      "value": "{{AuthClientSecret}}"
                    },
                    {
                      "description": "",
                      "key": "username",
                      "type": "text",
                      "value": "{{WrongDbUsername}}@{{WrongDbDatabase}}"
                    },
                    {
                      "description": "",
                      "key": "password",
                      "type": "text",
                      "value": "{{WrongDbPassword}}"
                    }
                  ]
                },
                "url": "https://accounts{{UriSuffix}}.iqmetrix.net/v1/oauth2/token"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "f901dc1c-a0c1-40a7-b3f0-74f5d78f3f25",
          "name": "01 - Ping",
          "description": "",
          "item": [
            {
              "_postman_id": "2ef715f4-3f46-4bac-9e2c-3b423e2617b6",
              "name": "01.01 - RQ Purchase Orders Ping",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "834e9973-88b1-4015-82b4-4481c9a34d03",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "body": {},
                "url": "{{RqPurchaseOrdersUri}}/ping"
              },
              "response": []
            },
            {
              "_postman_id": "12fa40c4-571a-4dbb-9dfc-97ce98afc22c",
              "name": "01.02 - SprocBridge Ping",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "937381d4-592b-4652-9639-8e42dbc9deb0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "body": {},
                "url": "https://{{SprocBridgeUri}}{{SprocBridgeUriSuffix}}.iqmetrix.net/ping"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "cdf77a0c-4b52-4dfb-b03b-ce614b28c9e6",
          "name": "02 - Update Quantity And Unit Cost",
          "description": "",
          "item": [
            {
              "_postman_id": "98c6d4e6-584a-4005-ac57-2e95851b8e7c",
              "name": "02.01 - Update Quantity And Unit Cost Success",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "abc20659-a19a-4d23-99a0-4f960cda9930",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"Updates\": [\n\t\t{\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": {{MinQuantity}},\n\t\t\t\"UnitCost\": {{UnitCost}}\n\t\t},\n\t\t{\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid2}}\",\n\t\t\t\"Quantity\": {{MinQuantity2}},\n\t\t\t\"UnitCost\": {{UnitCost2}}\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/UpdateQuantityAndUnitCost"
              },
              "response": []
            },
            {
              "_postman_id": "7d72a88b-c31c-4d18-ba62-a839261aee75",
              "name": "02.02 - Update Quantity And Unit Cost Fails Because Missing PurchaseOrderGuid",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "85d65d8b-2a1e-4b79-b482-623c8ded7d4c",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Proper error present\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Updates[0].PurchaseOrderGuid\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"Updates\": [\n\t\t{\n\t\t\t//\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": {{MinQuantity}},\n\t\t\t\"UnitCost\": {{UnitCost}}\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/UpdateQuantityAndUnitCost"
              },
              "response": []
            },
            {
              "_postman_id": "d66192ed-a9d8-4fdc-83bc-4f5349f5b15a",
              "name": "02.03 - Update Quantity And Unit Cost Fails Because Negative Unit Cost",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fae8eea9-7f64-432c-b05e-695779473d60",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Proper error present\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Updates[0].UnitCost\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"Updates\": [\n\t\t{\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": {{MinQuantity}},\n\t\t\t\"UnitCost\": -{{UnitCost}}\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/UpdateQuantityAndUnitCost"
              },
              "response": []
            },
            {
              "_postman_id": "e92f83bd-a5de-48d9-b1ee-e0deacbe05cc",
              "name": "02.04 - Update Quantity And Unit Cost Fails Because Incorrect Company Id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0994193d-6da1-41e3-8f0d-e198952bc60b",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"Updates\": [\n\t\t{\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": {{MinQuantity}},\n\t\t\t\"UnitCost\": {{UnitCost}}\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}1/PurchaseOrders/Products/{{CatalogId}}/UpdateQuantityAndUnitCost"
              },
              "response": []
            },
            {
              "_postman_id": "b5e8efa3-e48c-425c-b5bc-e74bc09df7a1",
              "name": "02.05 - Update Quantity And Unit Cost Succeeds Because CatalogId isn't on PO",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "acff3135-df76-4e91-b241-ae24d299a624",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"Updates\": [\n\t\t{\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": {{MinQuantity}},\n\t\t\t\"UnitCost\": {{UnitCost}}\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{$guid}}/UpdateQuantityAndUnitCost"
              },
              "response": []
            },
            {
              "_postman_id": "d98d2f38-5f34-45f2-89f0-bb6261ce8d8e",
              "name": "02.06 - Update Quantity And Unit Cost Fails Because Invalid Token",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b51f1215-90d9-4690-ad7a-8cbd4977d072",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{BadAuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"Updates\": [\n\t\t{\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": {{MinQuantity}},\n\t\t\t\"UnitCost\": {{UnitCost}}\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/UpdateQuantityAndUnitCost"
              },
              "response": []
            },
            {
              "_postman_id": "a1f2ac56-260b-4e79-8ddf-886a61fb2a12",
              "name": "02.07 - Update Quantity And Unit Cost Fails Because Negative Quantity",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b0be118e-a878-4e69-b16d-87c51c364387",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Has proper error message in result\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Updates[0].Quantity\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"Updates\": [\n\t\t{\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": -{{MinQuantity}},\n\t\t\t\"UnitCost\": {{UnitCost}}\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/UpdateQuantityAndUnitCost"
              },
              "response": []
            },
            {
              "_postman_id": "d94ffaba-c2b2-4074-9839-ba9ea5e8d534",
              "name": "02.08 - Update Quantity And Unit Cost Fails Because Changing Quantity Badly",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bcedfd0d-0c67-40cc-8dcd-43f252a99036",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Has proper error message in result\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"QuantityLessThanReceived\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7e8ee803-1030-4a5a-834c-5940363f2298",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"Updates\": [\n\t\t{\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": 1,\n\t\t\t\"UnitCost\": {{UnitCost}}\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/UpdateQuantityAndUnitCost"
              },
              "response": []
            },
            {
              "_postman_id": "085f8e23-5331-4a31-b2b4-c83ba5a66143",
              "name": "02.09 - Update Quantity And Unit Cost Fails Because Changing Unit Cost On Received",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "02c84c96-3a6e-4209-b137-75aa297051d7",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Has proper error message in result\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"UnitCostCannotBeChanged\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"Updates\": [\n\t\t{\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": {{MinQuantity}},\n\t\t\t\"UnitCost\": 1{{UnitCost}}\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/UpdateQuantityAndUnitCost"
              },
              "response": []
            },
            {
              "_postman_id": "076b5b0b-2bb5-4d4e-b62a-414355baf20e",
              "name": "02.10 - Update Quantity And Unit Cost Succeeds Despite Bad PO",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "02c84c96-3a6e-4209-b137-75aa297051d7",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"Updates\": [\n\t\t{\n\t\t\t\"PurchaseOrderGuid\": \"{{$guid}}\",\n\t\t\t\"Quantity\": {{MinQuantity}},\n\t\t\t\"UnitCost\": {{UnitCost}}\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/UpdateQuantityAndUnitCost"
              },
              "response": []
            },
            {
              "_postman_id": "76c46178-d0a9-4197-951c-bdd4af6bb8ca",
              "name": "02.11 - Update Quantity And Unit Cost Fails Because Wrong DB Auth Token",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "abc20659-a19a-4d23-99a0-4f960cda9930",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{WrongDbAuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"Updates\": [\n\t\t{\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": {{Quantity},\n\t\t\t\"UnitCost\": {{UnitCost}}\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/UpdateQuantityAndUnitCost"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "f92e60da-276f-4887-a83e-d46bed530286",
          "name": "03 - Get Purchase Order By Vendor, Product and Entity",
          "description": "",
          "item": [
            {
              "_postman_id": "377851ce-d9e9-4e39-8bd7-a78a1535fcc1",
              "name": "03.01 - Regular",
              "description": "",
              "item": [
                {
                  "_postman_id": "51579365-94b5-4a96-968b-c584a63f4b1b",
                  "name": "03.01.01 - By Location",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct TotalCount\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(2);",
                          "});",
                          "",
                          "pm.test(\"Correct Purchase Orders Count\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.PurchaseOrders.length).to.eql(2);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"Products\": [\n\t\t{\n\t\t\t\"CatalogId\": \"F7D50349-8DE1-4F3B-BD29-D93DCD5B9583\",\n\t\t\t\"Quantity\": 20,\n\t\t\t\"UnitCost\": -1\n\t\t}\n\t]\n}"
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{VendorProductSku}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{LocationEntityId}}&Entities={{$randomInt}}",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{VendorProductSku}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{LocationEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "7fac44d3-b671-48a2-88a8-1c87ad2e16c5",
                  "name": "03.01.02 - By Districts",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9dcd7283-abc5-4585-86ab-cf2ef2e821bb",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct TotalCount\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(2);",
                          "});",
                          "",
                          "pm.test(\"Correct Purchase Orders Count\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.PurchaseOrders.length).to.eql(2);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"Products\": [\n\t\t{\n\t\t\t\"CatalogId\": \"F7D50349-8DE1-4F3B-BD29-D93DCD5B9583\",\n\t\t\t\"Quantity\": 20,\n\t\t\t\"UnitCost\": -1\n\t\t}\n\t]\n}"
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{VendorProductSku}}&Entities={{DistrictEntityId}}&Entities={{$randomInt}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{VendorProductSku}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{DistrictEntityId}}",
                          "equals": true,
                          "description": "}"
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "5746d0e6-c611-46ec-9558-01a7798136de",
                  "name": "03.01.03 - By Regions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a6df5661-16e5-4ca5-8282-945fc993ecf7",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct TotalCount\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(2);",
                          "});",
                          "",
                          "pm.test(\"Correct Purchase Orders Count\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.PurchaseOrders.length).to.eql(2);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"Products\": [\n\t\t{\n\t\t\t\"CatalogId\": \"F7D50349-8DE1-4F3B-BD29-D93DCD5B9583\",\n\t\t\t\"Quantity\": 20,\n\t\t\t\"UnitCost\": -1\n\t\t}\n\t]\n}"
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{VendorProductSku}}&Entities={{RegionEntityId}}&Entities={{$randomInt}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{VendorProductSku}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{RegionEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "def4e969-4639-416e-8dcd-b47f5fbd6aab",
                  "name": "03.01.04 - By Channels",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct TotalCount\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(2);",
                          "});",
                          "",
                          "pm.test(\"Correct Purchase Orders Count\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.PurchaseOrders.length).to.eql(2);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"Products\": [\n\t\t{\n\t\t\t\"CatalogId\": \"F7D50349-8DE1-4F3B-BD29-D93DCD5B9583\",\n\t\t\t\"Quantity\": 20,\n\t\t\t\"UnitCost\": -1\n\t\t}\n\t]\n}"
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{VendorProductSku}}&Entities={{ChannelEntityId}}&Entities={{$randomInt}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{VendorProductSku}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{ChannelEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "fa609211-d35c-4cc3-85be-ef3c4135296d",
                  "name": "03.01.05 - By Companies",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct TotalCount\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(6);",
                          "});",
                          "",
                          "pm.test(\"Correct Purchase Orders Count\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.PurchaseOrders.length).to.eql(6);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"Products\": [\n\t\t{\n\t\t\t\"CatalogId\": \"F7D50349-8DE1-4F3B-BD29-D93DCD5B9583\",\n\t\t\t\"Quantity\": 20,\n\t\t\t\"UnitCost\": -1\n\t\t}\n\t]\n}"
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{VendorProductSku}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{VendorProductSku}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "1d48c269-828f-4051-8963-b4573df5ec16",
                  "name": "03.01.06 - By Multiple Type",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct TotalCount\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(2);",
                          "});",
                          "",
                          "pm.test(\"Correct Purchase Orders Count\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.PurchaseOrders.length).to.eql(2);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"Products\": [\n\t\t{\n\t\t\t\"CatalogId\": \"F7D50349-8DE1-4F3B-BD29-D93DCD5B9583\",\n\t\t\t\"Quantity\": 20,\n\t\t\t\"UnitCost\": -1\n\t\t}\n\t]\n}"
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{VendorProductSku}}&Entities={{RegionEntityId}}&Entities={{ChannelEntityId}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{VendorProductSku}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{RegionEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{ChannelEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "9a2e8dc3-d654-4d81-8425-4fc2cb21989f",
                  "name": "03.01.07 - Fails Because Bad CompanyEntityId",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9314cd47-dc66-44a8-8da1-a37f203fc541",
                        "exec": [
                          "pm.test(\"Status code is 401\", function () {",
                          "    pm.response.to.have.status(401);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"Products\": [\n\t\t{\n\t\t\t\"CatalogId\": \"F7D50349-8DE1-4F3B-BD29-D93DCD5B9583\",\n\t\t\t\"Quantity\": 20,\n\t\t\t\"UnitCost\": -1\n\t\t}\n\t]\n}"
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{$randomInt}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{VendorProductSku}}&Entities={{RegionEntityId}}&Entities={{$randomInt}}",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{$randomInt}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{VendorProductSku}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{RegionEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "53a5d1cb-656c-464b-add4-7efde3c92001",
                  "name": "03.01.08 - Fails Because No SearchString",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ee8da592-841a-497f-be61-e99a5929709a",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"Products\": [\n\t\t{\n\t\t\t\"CatalogId\": \"F7D50349-8DE1-4F3B-BD29-D93DCD5B9583\",\n\t\t\t\"Quantity\": 20,\n\t\t\t\"UnitCost\": -1\n\t\t}\n\t]\n}"
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&Entities={{RegionEntityId}}&Entities={{$randomInt}}",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{RegionEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "f78d143f-fe2b-4501-a914-38dc2d51f9fd",
                  "name": "03.01.09 - Fails Because No VendorId",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ee8da592-841a-497f-be61-e99a5929709a",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"Products\": [\n\t\t{\n\t\t\t\"CatalogId\": \"F7D50349-8DE1-4F3B-BD29-D93DCD5B9583\",\n\t\t\t\"Quantity\": 20,\n\t\t\t\"UnitCost\": -1\n\t\t}\n\t]\n}"
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?SearchString={{VendorProductSku}}&Entities={{RegionEntityId}}&Entities={{$randomInt}}",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "SearchString",
                          "value": "{{VendorProductSku}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{RegionEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "8939a452-34f5-46cf-ae0c-ca43aa441712",
                  "name": "03.01.10 - Fails Because No Start Date",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"Products\": [\n\t\t{\n\t\t\t\"CatalogId\": \"F7D50349-8DE1-4F3B-BD29-D93DCD5B9583\",\n\t\t\t\"Quantity\": 20,\n\t\t\t\"UnitCost\": -1\n\t\t}\n\t]\n}"
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{VendorProductSku}}&Entities={{RegionEntityId}}&Entities={{$randomInt}}&EndDate={{GetPoEndDate}}",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{VendorProductSku}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{RegionEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "d6ea1fbd-b101-45f9-95dc-a27060855ebc",
                  "name": "03.01.11 - Fails Because No End Date",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ab1bfa71-197f-4283-9079-157d6f373478",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"Products\": [\n\t\t{\n\t\t\t\"CatalogId\": \"F7D50349-8DE1-4F3B-BD29-D93DCD5B9583\",\n\t\t\t\"Quantity\": 20,\n\t\t\t\"UnitCost\": -1\n\t\t}\n\t]\n}"
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{VendorProductSku}}&Entities={{RegionEntityId}}&Entities={{$randomInt}}&StartDate={{GetPoStartDate}}",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{VendorProductSku}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{RegionEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "d1d01f54-b7a2-4ac4-bd1d-b702b6985453",
                  "name": "03.01.12 - Returns No Results",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct TotalCount\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});",
                          "",
                          "pm.test(\"Correct Purchase Orders Count\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.PurchaseOrders.length).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"Products\": [\n\t\t{\n\t\t\t\"CatalogId\": \"F7D50349-8DE1-4F3B-BD29-D93DCD5B9583\",\n\t\t\t\"Quantity\": 20,\n\t\t\t\"UnitCost\": -1\n\t\t}\n\t]\n}"
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}1&SearchString={{VendorProductSku}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}1",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{VendorProductSku}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "a9f1f6ab-b9af-4ba2-852d-cac804796884",
                  "name": "03.01.13 - Fails Because Wrong DB Auth Token",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 401\", function () {",
                          "    pm.response.to.have.status(401);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{WrongDbAuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"Products\": [\n\t\t{\n\t\t\t\"CatalogId\": \"F7D50349-8DE1-4F3B-BD29-D93DCD5B9583\",\n\t\t\t\"Quantity\": 20,\n\t\t\t\"UnitCost\": -1\n\t\t}\n\t]\n}"
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{VendorProductSku}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{LocationEntityId}}&Entities={{$randomInt}}",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{VendorProductSku}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{LocationEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "93c131e8-093b-4194-bfe6-fd3a2de1d876",
              "name": "03.02 - Filtering",
              "description": "",
              "item": [
                {
                  "_postman_id": "6e250b66-de3a-44c5-86a9-4024e76c0bdf",
                  "name": "No Filter",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(16);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "7ce62a9b-a1ca-4b31-86d7-79bb38d7e6a1",
                  "name": "Completed True",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(16);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "f6beaccd-7811-45d0-b145-1b539329fc77",
                  "name": "Completed False",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(7);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Completed=false",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "equals": true,
                          "key": "Committed",
                          "value": "true",
                          "disabled": true
                        },
                        {
                          "equals": true,
                          "key": "Pending",
                          "value": "true",
                          "disabled": true
                        },
                        {
                          "equals": true,
                          "key": "PartiallyReceived",
                          "value": "true",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "6b441ed2-34f9-4767-b8e6-d7b8ee05ff75",
                  "name": "Committed True",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(16);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Committed=true",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "equals": true,
                          "key": "Completed",
                          "value": "true",
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "equals": true,
                          "key": "Pending",
                          "value": "true",
                          "disabled": true
                        },
                        {
                          "equals": true,
                          "key": "PartiallyReceived",
                          "value": "true",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "9161b8bd-607e-43ff-9d04-58af692a92b5",
                  "name": "Committed False",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Committed=false",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "equals": true,
                          "key": "Completed",
                          "value": "true",
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "equals": true,
                          "key": "Pending",
                          "value": "true",
                          "disabled": true
                        },
                        {
                          "equals": true,
                          "key": "PartiallyReceived",
                          "value": "true",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "2068bf0e-c7d5-4eab-b778-e854f64a5f74",
                  "name": "Pending True",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(16);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Pending=true",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "f3f6a1a4-3c01-4c28-bc88-db2cfaef7d01",
                  "name": "Pending False",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Pending=false",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Pending",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "7c8324f2-6dbb-413f-baf8-b97cac2e8285",
                  "name": "Partially Received True",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(9);",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&PartiallyReceived=true",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "fe0ad601-5b2b-493f-a40c-c01fad28463c",
                  "name": "Partially Received False",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(7);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&PartiallyReceived=false",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "false",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "8e4cba56-b278-40ef-a7b9-7182bfa0c7f0",
                  "name": "Completed True, Committed True",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(9);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Completed=true&Committed=true",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "9138d1de-9179-43eb-a572-73204cb6da2a",
                  "name": "Completed False, Committed True",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(7);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Completed=false&Committed=true",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "46b64236-2b3d-47d4-88ee-ae953a02269f",
                  "name": "Completed True, Pending True",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(9);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Completed=true&Pending=true",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "81420d9c-76c1-457d-9cde-4bff6e2a35a7",
                  "name": "Completed False, Pending True",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(7);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Completed=false&Pending=true",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "7292ba89-0369-4035-ab2d-706c8ba9c2e8",
                  "name": "Completed True, Partially Received True",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(8);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Completed=true&PartiallyReceived=true",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "acfa9982-7e6b-410a-b148-fecfed0b2604",
                  "name": "Completed False, Partially Received True",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(1);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Completed=false&PartiallyReceived=true",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "9bef9463-466a-49f8-981c-9060c0c64a9c",
                  "name": "Completed True, Committed False",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Completed=true&Committed=false",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Committed",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "3dbbf030-6182-4514-8dfb-e2e944bd1918",
                  "name": "Completed False, Committed False",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Completed=false&Committed=false",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "Committed",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "0540811a-396b-43f9-9e28-1de079e857c9",
                  "name": "Completed True, Pending False",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Completed=true&Pending=false",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Pending",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "3d63fbee-6c81-4971-9466-d2868ca5ce17",
                  "name": "Completed False, Pending False",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Completed=false&Pending=false",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Pending",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "525897ec-e601-4028-85cf-47c12e9e1726",
                  "name": "Completed True, Partially Received False",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(1);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Completed=true&PartiallyReceived=false",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "false",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "7370c61c-418a-4f69-9842-4050912b4573",
                  "name": "Completed False, Partially Received False Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(6);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Completed=false&PartiallyReceived=false",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "false",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "5e464845-81cb-44a0-8fa0-8056fffc3fbb",
                  "name": "Committed True, Partially Received True",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(9);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Committed=true&PartiallyReceived=true",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "87063f94-7f28-4159-92b8-5977ee3242b1",
                  "name": "Committed False, Partially Received True",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Committed=false&PartiallyReceived=true",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "58b6fb51-faed-435c-a5b3-6ef5b65a7fe1",
                  "name": "Committed True, Pending True",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(16);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Committed=true&Pending=true",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "5f75763e-1694-43c5-9d99-4f56cd73aaed",
                  "name": "Committed False, Pending True",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Committed=false&Pending=true",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "cad19d68-a7d5-4273-9dfb-ead4f0ee182c",
                  "name": "Committed True, Pending False",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Committed=true&Pending=false",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Pending",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "0b8ef086-9e3a-4a03-897b-c054f1973541",
                  "name": "Committed False, Pending False",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Committed=false&Pending=false",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "Pending",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "a4340cae-2ced-40ec-aecb-e365cc55dd31",
                  "name": "Committed True, Partially Received False",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(7);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Committed=true&PartiallyReceived=false",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "false",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "a27d6e6e-f266-45e4-90c1-95882a397be7",
                  "name": "Committed False, Partially Received False",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Committed=false&PartiallyReceived=false",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "false",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "f5a50d5c-7f43-4da2-b6b0-af50a80b10a3",
                  "name": "Pending True, Partially Received True",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(9);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Pending=true&PartiallyReceived=true",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "14c1b811-7d97-424e-b01f-a7f54f7ec12a",
                  "name": "Pending False, Partially Received True",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Pending=false&PartiallyReceived=true",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Pending",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "c3f48b2c-2a84-498c-a415-328f04b9ddbb",
                  "name": "Pending True, Partially Received False",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(7);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Pending=true&PartiallyReceived=false",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "false",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "1e3f98eb-00f6-43da-95d9-c075cbaf5451",
                  "name": "Pending False, Partially Received False",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Pending=false&PartiallyReceived=false",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "Pending",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "false",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "a25d401d-62ec-4835-8f00-bae4b1e70149",
                  "name": "Completed True, Committed True, Pending True",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(9);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Completed=true&Committed=true&Pending=true",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "876f0bbe-a0c3-4e6b-86f8-2bac34b16a7b",
                  "name": "Completed True, Committed False, Pending False",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Completed=true&Committed=false&Pending=false",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Committed",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "Pending",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "ec6212f7-5e41-443a-9fb4-4076caedcf6e",
                  "name": "Completed False, Committed False, Pending False Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Completed=false&Committed=false&Pending=false",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "Committed",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "Pending",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "865036ac-5795-41bc-b8e4-9a30438dd5a7",
                  "name": "Completed True, Committed False, Pending True",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Completed=true&Committed=false&Pending=true",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Committed",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "ba38bcb0-b61f-407e-af9d-d94a33ca5762",
                  "name": "Completed True, Committed True, Pending False",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Completed=true&Committed=true&Pending=false",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Pending",
                          "value": "false",
                          "equals": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "394b51ff-649d-4fde-8376-44f7d223f2c4",
                  "name": "Completed True, Committed True, Partially Received True",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Your test name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(8);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Completed=true&Committed=true&PartiallyReceived=true",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Completed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Committed",
                          "value": "true",
                          "equals": true
                        },
                        {
                          "key": "Pending",
                          "value": "true",
                          "equals": true,
                          "disabled": true
                        },
                        {
                          "key": "PartiallyReceived",
                          "value": "true",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "278cca8d-1284-4a67-a03e-88de5c5b4002",
              "name": "03.03 - GraphQL",
              "description": "",
              "item": [
                {
                  "_postman_id": "cd5bf738-b2d1-4113-bac6-bfeb16c53cc8",
                  "name": "Filtering",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "f5643710-e9be-43f8-8c9d-06763c9a2bdf",
                      "name": "No Filter Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Your test name\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.TotalCount).to.eql(16);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "host": [
                            "{{RqPurchaseOrdersUri}}"
                          ],
                          "path": [
                            "Companies",
                            "{{CompanyEntityId}}",
                            "PurchaseOrders",
                            "GraphQL"
                          ],
                          "query": [
                            {
                              "key": "Query",
                              "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                              "equals": true
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "54fd75e1-a32d-4a9e-9c39-280dbee97097",
                      "name": "Completed True, Committed True, Pending True Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Your test name\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.TotalCount).to.eql(9);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Completed: true, Committed: true, Pending : true) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "host": [
                            "{{RqPurchaseOrdersUri}}"
                          ],
                          "path": [
                            "Companies",
                            "{{CompanyEntityId}}",
                            "PurchaseOrders",
                            "GraphQL"
                          ],
                          "query": [
                            {
                              "key": "Query",
                              "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Completed: true, Committed: true, Pending : true) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                              "equals": true
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "eda82be2-6598-4b7c-85f4-0cb0eec80520",
                      "name": "Committed True, Pending True Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Your test name\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.TotalCount).to.eql(16);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Committed: true, Pending: true) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "host": [
                            "{{RqPurchaseOrdersUri}}"
                          ],
                          "path": [
                            "Companies",
                            "{{CompanyEntityId}}",
                            "PurchaseOrders",
                            "GraphQL"
                          ],
                          "query": [
                            {
                              "key": "Query",
                              "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Committed: true, Pending: true) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "786ae7f9-6b0a-4925-9205-ec23b6aa93e3",
                      "name": "Completed False, Committed True Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Your test name\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.TotalCount).to.eql(7);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Completed: false, Committed: true) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "host": [
                            "{{RqPurchaseOrdersUri}}"
                          ],
                          "path": [
                            "Companies",
                            "{{CompanyEntityId}}",
                            "PurchaseOrders",
                            "GraphQL"
                          ],
                          "query": [
                            {
                              "key": "Query",
                              "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Completed: false, Committed: true) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "250984bb-dadf-4e4b-97a4-e3b3e4042da5",
                  "name": "Pagination",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "a64e2906-32d7-4289-b361-e66bf49a08b8",
                      "name": "Take 5",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Correct Number\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.TotalCount).to.eql(5);",
                              "});",
                              "",
                              "pm.test(\"First Is Correct\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.PurchaseOrders[0].PurchaseOrderNumber).to.eql(\"84WEAPO1086\");",
                              "});",
                              "",
                              "pm.test(\"Las5t Is Correct\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.PurchaseOrders[4].PurchaseOrderNumber).to.eql(\"84WEAPO1112\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Take: 5) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "host": [
                            "{{RqPurchaseOrdersUri}}"
                          ],
                          "path": [
                            "Companies",
                            "{{CompanyEntityId}}",
                            "PurchaseOrders",
                            "GraphQL"
                          ],
                          "query": [
                            {
                              "key": "Query",
                              "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Take: 5) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                              "equals": true
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "d83a3251-6b44-4a78-b6c0-b0ddc134dbb4",
                      "name": "Skip 5",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Correct Number\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.TotalCount).to.eql(11);",
                              "});",
                              "",
                              "pm.test(\"First Is Correct\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.PurchaseOrders[0].PurchaseOrderNumber).to.eql(\"84WEAPO1120\");",
                              "});",
                              "",
                              "pm.test(\"Last Is Correct\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.PurchaseOrders[10].PurchaseOrderNumber).to.eql(\"TTLTTPO1\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Skip: 5) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "host": [
                            "{{RqPurchaseOrdersUri}}"
                          ],
                          "path": [
                            "Companies",
                            "{{CompanyEntityId}}",
                            "PurchaseOrders",
                            "GraphQL"
                          ],
                          "query": [
                            {
                              "key": "Query",
                              "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Skip: 5) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "a7e489f7-509d-489b-a340-0fc4737a5cd1",
                      "name": "Take 0",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Correct Number\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.TotalCount).to.eql(0);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Take: 0) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "host": [
                            "{{RqPurchaseOrdersUri}}"
                          ],
                          "path": [
                            "Companies",
                            "{{CompanyEntityId}}",
                            "PurchaseOrders",
                            "GraphQL"
                          ],
                          "query": [
                            {
                              "key": "Query",
                              "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Take: 0) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "58d1f094-1ae3-420d-9840-651dd5a617e2",
                      "name": "Skip 5 Take 5",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Correct Number\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.TotalCount).to.eql(5);",
                              "});",
                              "",
                              "pm.test(\"First Is Correct\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.PurchaseOrders[0].PurchaseOrderNumber).to.eql(\"84WEAPO1120\");",
                              "});",
                              "",
                              "pm.test(\"Last Is Correct\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.PurchaseOrders[4].PurchaseOrderNumber).to.eql(\"84WEAPO1148\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Take: 5, Skip: 5) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "host": [
                            "{{RqPurchaseOrdersUri}}"
                          ],
                          "path": [
                            "Companies",
                            "{{CompanyEntityId}}",
                            "PurchaseOrders",
                            "GraphQL"
                          ],
                          "query": [
                            {
                              "key": "Query",
                              "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Take: 5, Skip: 5) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "9f167e82-7e4b-4eef-b9b9-7c2f686829a4",
                      "name": "Skip 0",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Correct Number\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.TotalCount).to.eql(16);",
                              "});",
                              "",
                              "pm.test(\"First Is Correct\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.PurchaseOrders[0].PurchaseOrderNumber).to.eql(\"84WEAPO1086\");",
                              "});",
                              "",
                              "pm.test(\"Last Is Correct\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.PurchaseOrders[4].PurchaseOrderNumber).to.eql(\"TTLTTPO1\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Skip: 0) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "host": [
                            "{{RqPurchaseOrdersUri}}"
                          ],
                          "path": [
                            "Companies",
                            "{{CompanyEntityId}}",
                            "PurchaseOrders",
                            "GraphQL"
                          ],
                          "query": [
                            {
                              "key": "Query",
                              "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Skip: 0) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                              "equals": true
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "bf93dfdd-a6ad-4ed4-9362-d5af81ddff58",
                      "name": "Skip 0 Take 100",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Correct Number\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.TotalCount).to.eql(16);",
                              "});",
                              "",
                              "pm.test(\"First Is Correct\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.PurchaseOrders[0].PurchaseOrderNumber).to.eql(\"84WEAPO1086\");",
                              "});",
                              "",
                              "pm.test(\"Last Is Correct\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.PurchaseOrders[15].PurchaseOrderNumber).to.eql(\"TTLTTPO1\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Take: 100, Skip: 0) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "host": [
                            "{{RqPurchaseOrdersUri}}"
                          ],
                          "path": [
                            "Companies",
                            "{{CompanyEntityId}}",
                            "PurchaseOrders",
                            "GraphQL"
                          ],
                          "query": [
                            {
                              "key": "Query",
                              "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Take: 100, Skip: 0) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "20b8b655-8ed8-46af-b071-c1f83697174c",
                      "name": "Skip 100 Take 100",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Correct Number\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.TotalCount).to.eql(0);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Take: 100, Skip: 100) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "host": [
                            "{{RqPurchaseOrdersUri}}"
                          ],
                          "path": [
                            "Companies",
                            "{{CompanyEntityId}}",
                            "PurchaseOrders",
                            "GraphQL"
                          ],
                          "query": [
                            {
                              "key": "Query",
                              "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Take: 100, Skip: 100) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                              "equals": true
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "e80f1279-6ea9-4877-9b71-35299ebb032a",
                      "name": "Skip 100 Take 0",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Correct Number\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.Data.TotalCount).to.eql(0);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Take: 0, Skip: 100) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "host": [
                            "{{RqPurchaseOrdersUri}}"
                          ],
                          "path": [
                            "Companies",
                            "{{CompanyEntityId}}",
                            "PurchaseOrders",
                            "GraphQL"
                          ],
                          "query": [
                            {
                              "key": "Query",
                              "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{FilteringProductIdentifier}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId, Take: 0, Skip: 100) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                              "equals": true
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "5a312454-0e62-430f-bb9e-0461f08f3621",
                  "name": "Experimental - Hot Chocolate",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{LocationEntityId}}], CompanyEntityId: $CompanyEntityId, Completed: true) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders",
                        "GraphQL"
                      ],
                      "query": [
                        {
                          "key": "Query",
                          "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{LocationEntityId}}], CompanyEntityId: $CompanyEntityId, Completed: true) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "3b0719ed-2447-4d47-a4af-30eb2d54f6fb",
                  "name": "03.01.01 - By Location",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct TotalCount\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.Data.TotalCount).to.eql(2);",
                          "});",
                          "",
                          "pm.test(\"Correct Purchase Orders Count\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.Data.PurchaseOrders.length).to.eql(2);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{LocationEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders",
                        "GraphQL"
                      ],
                      "query": [
                        {
                          "key": "Query",
                          "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{LocationEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "8c7489d9-2258-4949-a993-b41170eb23a9",
                  "name": "03.01.02 - By Districts",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9dcd7283-abc5-4585-86ab-cf2ef2e821bb",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct TotalCount\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.Data.TotalCount).to.eql(2);",
                          "});",
                          "",
                          "pm.test(\"Correct Purchase Orders Count\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.Data.PurchaseOrders.length).to.eql(2);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{DistrictEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders",
                        "GraphQL"
                      ],
                      "query": [
                        {
                          "key": "Query",
                          "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{DistrictEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "3c3e23ab-7e63-4e73-9a13-79faa9c8089d",
                  "name": "03.01.03 - By Regions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a6df5661-16e5-4ca5-8282-945fc993ecf7",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct TotalCount\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.Data.TotalCount).to.eql(2);",
                          "});",
                          "",
                          "pm.test(\"Correct Purchase Orders Count\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.Data.PurchaseOrders.length).to.eql(2);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{RegionEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders",
                        "GraphQL"
                      ],
                      "query": [
                        {
                          "key": "Query",
                          "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{RegionEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "599cf4d1-3fd0-4bfa-aeb9-8c97e2133dfc",
                  "name": "03.01.04 - By Channels",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct TotalCount\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.Data.TotalCount).to.eql(2);",
                          "});",
                          "",
                          "pm.test(\"Correct Purchase Orders Count\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.Data.PurchaseOrders.length).to.eql(2);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{ChannelEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders",
                        "GraphQL"
                      ],
                      "query": [
                        {
                          "key": "Query",
                          "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{ChannelEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "c7d320b0-bdcd-44e6-ab51-673ccfe662a4",
                  "name": "03.01.05 - By Companies",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct TotalCount\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.Data.TotalCount).to.eql(6);",
                          "});",
                          "",
                          "pm.test(\"Correct Purchase Orders Count\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.Data.PurchaseOrders.length).to.eql(6);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders",
                        "GraphQL"
                      ],
                      "query": [
                        {
                          "key": "Query",
                          "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{CompanyEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "d03eb805-c317-479a-b925-f1a3ee5d77fb",
                  "name": "03.01.06 - By Multiple Type",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct TotalCount\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.Data.TotalCount).to.eql(2);",
                          "});",
                          "",
                          "pm.test(\"Correct Purchase Orders Count\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.Data.PurchaseOrders.length).to.eql(2);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{ChannelEntityId}}, {{RegionEntityId}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders",
                        "GraphQL"
                      ],
                      "query": [
                        {
                          "key": "Query",
                          "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{ChannelEntityId}}, {{RegionEntityId}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "b94638fc-ade0-44f7-82bc-46f122c72aa1",
                  "name": "03.01.07 - Fails Because Bad CompanyEntityId",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9314cd47-dc66-44a8-8da1-a37f203fc541",
                        "exec": [
                          "pm.test(\"Status code is 401\", function () {",
                          "    pm.response.to.have.status(401);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{$randomInt}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{ChannelEntityId}}, {{RegionEntityId}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{$randomInt}}",
                        "PurchaseOrders",
                        "GraphQL"
                      ],
                      "query": [
                        {
                          "key": "Query",
                          "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{ChannelEntityId}}, {{RegionEntityId}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "6a4472c0-f3f5-4472-9d90-1d5bef4e48c6",
                  "name": "03.01.08 - Fails Because No SearchString",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ee8da592-841a-497f-be61-e99a5929709a",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{ChannelEntityId}}, {{RegionEntityId}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders",
                        "GraphQL"
                      ],
                      "query": [
                        {
                          "key": "Query",
                          "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{ChannelEntityId}}, {{RegionEntityId}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "bfc15f8d-ca06-4df2-875f-df7d14c7c401",
                  "name": "03.01.09 - Fails Because No VendorId",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ee8da592-841a-497f-be61-e99a5929709a",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{ChannelEntityId}}, {{RegionEntityId}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders",
                        "GraphQL"
                      ],
                      "query": [
                        {
                          "key": "Query",
                          "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{ChannelEntityId}}, {{RegionEntityId}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "6ddd96d9-6c2b-4c3f-b9a4-9480f5ee9f16",
                  "name": "03.01.10 - Fails Because No Start Date",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{ChannelEntityId}}, {{RegionEntityId}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders",
                        "GraphQL"
                      ],
                      "query": [
                        {
                          "key": "Query",
                          "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{ChannelEntityId}}, {{RegionEntityId}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "c058249b-1aa8-42c7-9cfd-a5ee8e097452",
                  "name": "03.01.11 - Fails Because No End Date",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ab1bfa71-197f-4283-9079-157d6f373478",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", Entities: [{{ChannelEntityId}}, {{RegionEntityId}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders",
                        "GraphQL"
                      ],
                      "query": [
                        {
                          "key": "Query",
                          "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", Entities: [{{ChannelEntityId}}, {{RegionEntityId}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "295577f1-835f-45b1-a816-2d00e4aee480",
                  "name": "03.01.12 - Returns No Results",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct TotalCount\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.Data.TotalCount).to.eql(0);",
                          "});",
                          "",
                          "pm.test(\"Correct Purchase Orders Count\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.Data.PurchaseOrders.length).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}1, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{ChannelEntityId}}, {{RegionEntityId}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders",
                        "GraphQL"
                      ],
                      "query": [
                        {
                          "key": "Query",
                          "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}1, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{ChannelEntityId}}, {{RegionEntityId}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "aea54b4f-a673-4a8c-9fc4-6e6b8bd58c4a",
                  "name": "03.01.13 - Fails Because Wrong DB Auth Token",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 401\", function () {",
                          "    pm.response.to.have.status(401);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{WrongDbAuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{ChannelEntityId}}, {{RegionEntityId}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders",
                        "GraphQL"
                      ],
                      "query": [
                        {
                          "key": "Query",
                          "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{ChannelEntityId}}, {{RegionEntityId}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "f46669c0-bbda-479c-bed3-f4b55d8840d6",
                  "name": "03.01.14 - Fails Because No Query",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 401\", function () {",
                          "    pm.response.to.have.status(401);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{WrongDbAuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders",
                        "GraphQL"
                      ],
                      "query": [
                        {
                          "key": "Query",
                          "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{ChannelEntityId}}, {{RegionEntityId}}], CompanyEntityId: $CompanyEntityId, Completed: true) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "type": "text",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "c98da39e-f6cb-4780-bc4f-1b636459c35b",
                  "name": "03.01.15 - By Location With Encoding",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct TotalCount\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.Data.TotalCount).to.eql(2);",
                          "});",
                          "",
                          "pm.test(\"Correct Purchase Orders Count\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.Data.PurchaseOrders.length).to.eql(2);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/GraphQL?Query=query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{LocationEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }&Accept-Encoding=gzip",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders",
                        "GraphQL"
                      ],
                      "query": [
                        {
                          "key": "Query",
                          "value": "query GetPurchaseOrdersByVendorProductAndEntities($CompanyEntityId: Int){ TotalCount, PurchaseOrders(VendorId: {{VendorEntityId}}, SearchString: \"{{VendorProductSku}}\", StartDate: \"{{GetPoStartDate}}\", EndDate: \"{{GetPoEndDate}}\", Entities: [{{LocationEntityId}}, {{$randomInt}}], CompanyEntityId: $CompanyEntityId) { PurchaseOrderGuid,PurchaseOrderNumber,Location,LocationEntityId,Vendor,FullyReceived,PartiallyReceived,ReferenceNumber,ShippingCost,Completed,Committed,Pending,OrderedBy,LastModifiedDate,CreatedDate,CommittedDate,TotalCost,StoreType,CompletedDate,CompletedBy } }",
                          "equals": true
                        },
                        {
                          "key": "Accept-Encoding",
                          "value": "gzip",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "30d6dba9-9955-4148-871e-1716cd64ae77",
              "name": "03.04 - Pagination",
              "description": "",
              "item": [
                {
                  "_postman_id": "cc234f3b-c291-4320-95d6-3d5f89eb1e4e",
                  "name": "Take 5",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct Number\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(5);",
                          "});",
                          "",
                          "pm.test(\"First Is Correct\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.PurchaseOrders[0].PurchaseOrderNumber).to.eql(\"84WEAPO1086\");",
                          "});",
                          "",
                          "pm.test(\"Las5t Is Correct\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.PurchaseOrders[4].PurchaseOrderNumber).to.eql(\"84WEAPO1112\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Take=5",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Skip",
                          "type": "text",
                          "value": "0",
                          "disabled": true
                        },
                        {
                          "key": "Take",
                          "value": "5",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "6e2e5b58-3da3-4c89-9b8a-0234b586ff73",
                  "name": "Take 0",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct Number\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Take=0",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Skip",
                          "type": "text",
                          "value": "0",
                          "disabled": true
                        },
                        {
                          "key": "Take",
                          "value": "0",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "dc12e65e-fabe-46f0-a45f-2b1f41a5e803",
                  "name": "Skip 5",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct Number\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(11);",
                          "});",
                          "",
                          "pm.test(\"First Is Correct\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.PurchaseOrders[0].PurchaseOrderNumber).to.eql(\"84WEAPO1120\");",
                          "});",
                          "",
                          "pm.test(\"Last Is Correct\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.PurchaseOrders[10].PurchaseOrderNumber).to.eql(\"TTLTTPO1\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Skip=5",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Skip",
                          "value": "5",
                          "equals": true
                        },
                        {
                          "key": "Take",
                          "value": "5",
                          "equals": true,
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "98967d6a-8a54-4817-a0b6-fd69e79925f1",
                  "name": "Skip 0",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct Number\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(16);",
                          "});",
                          "",
                          "pm.test(\"First Is Correct\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.PurchaseOrders[0].PurchaseOrderNumber).to.eql(\"84WEAPO1086\");",
                          "});",
                          "",
                          "pm.test(\"Last Is Correct\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.PurchaseOrders[15].PurchaseOrderNumber).to.eql(\"TTLTTPO1\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Skip=0",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Skip",
                          "value": "0",
                          "equals": true
                        },
                        {
                          "equals": true,
                          "key": "Take",
                          "value": "5",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "51915700-6c46-4e8f-a3e2-59309bb6162b",
                  "name": "Skip 5 Take 5",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct Number\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(5);",
                          "});",
                          "",
                          "pm.test(\"First Is Correct\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.PurchaseOrders[0].PurchaseOrderNumber).to.eql(\"84WEAPO1120\");",
                          "});",
                          "",
                          "pm.test(\"Last Is Correct\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.PurchaseOrders[4].PurchaseOrderNumber).to.eql(\"84WEAPO1148\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Skip=5&Take=5",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Skip",
                          "value": "5",
                          "equals": true
                        },
                        {
                          "key": "Take",
                          "value": "5",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "e905fca3-4d4c-41bf-a795-ae28ada5a7d2",
                  "name": "Skip 0 Take 100",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct Number\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(16);",
                          "});",
                          "",
                          "pm.test(\"First Is Correct\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.PurchaseOrders[0].PurchaseOrderNumber).to.eql(\"84WEAPO1086\");",
                          "});",
                          "",
                          "pm.test(\"Last Is Correct\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.PurchaseOrders[15].PurchaseOrderNumber).to.eql(\"TTLTTPO1\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Skip=0&Take=100",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Skip",
                          "value": "0",
                          "equals": true
                        },
                        {
                          "key": "Take",
                          "value": "100",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "10e08e47-32a6-4acd-bacf-c1337078b1a2",
                  "name": "Skip 100 Take 100",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct Number\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Skip=100&Take=100",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Skip",
                          "value": "100",
                          "equals": true
                        },
                        {
                          "key": "Take",
                          "value": "100",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "f5d082e5-40d1-4457-b631-ed0103d4fd35",
                  "name": "Skip 100 Take 0",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct Number\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.TotalCount).to.eql(0);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{AuthToken}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders?VendorId={{VendorEntityId}}&SearchString={{FilteringProductIdentifier}}&StartDate={{GetPoStartDate}}&EndDate={{GetPoEndDate}}&Entities={{CompanyEntityId}}&Entities={{$randomInt}}&Skip=100&Take=0",
                      "host": [
                        "{{RqPurchaseOrdersUri}}"
                      ],
                      "path": [
                        "Companies",
                        "{{CompanyEntityId}}",
                        "PurchaseOrders"
                      ],
                      "query": [
                        {
                          "key": "VendorId",
                          "value": "{{VendorEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "SearchString",
                          "value": "{{FilteringProductIdentifier}}",
                          "equals": true
                        },
                        {
                          "key": "StartDate",
                          "value": "{{GetPoStartDate}}",
                          "equals": true
                        },
                        {
                          "key": "EndDate",
                          "value": "{{GetPoEndDate}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{CompanyEntityId}}",
                          "equals": true
                        },
                        {
                          "key": "Entities",
                          "value": "{{$randomInt}}",
                          "equals": true
                        },
                        {
                          "key": "Skip",
                          "value": "100",
                          "equals": true
                        },
                        {
                          "key": "Take",
                          "value": "0",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "bb47af2b-0a98-42d3-aa82-e97172ebd725",
          "name": "04 - Swagger",
          "description": "",
          "item": [
            {
              "_postman_id": "e2db8a99-4258-4c64-8b3e-a694ff148db5",
              "name": "04.01 - Get Swagger UI should work",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"Products\": [\n\t\t{\n\t\t\t\"CatalogId\": \"F7D50349-8DE1-4F3B-BD29-D93DCD5B9583\",\n\t\t\t\"Quantity\": 20,\n\t\t\t\"UnitCost\": -1\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}"
              },
              "response": []
            },
            {
              "_postman_id": "45767d2c-d98e-4768-abda-d138609857a3",
              "name": "04.02 - Get Swagger doc should work",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"Products\": [\n\t\t{\n\t\t\t\"CatalogId\": \"F7D50349-8DE1-4F3B-BD29-D93DCD5B9583\",\n\t\t\t\"Quantity\": 20,\n\t\t\t\"UnitCost\": -1\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/swagger/RQPurchaseOrders/swagger.json"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "adb5a1a1-1f2c-4640-8dbf-204fdd5c1122",
          "name": "05 - Add Purchase Order Products",
          "description": "",
          "item": [
            {
              "_postman_id": "fffdb38a-3158-41ac-bb55-43d97ace0864",
              "name": "05.01 - Add Product Succeeds",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a8c3ba0-0979-4e10-be1b-2e6a99226d3f",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{AuthToken}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrdersAndProducts\": [\n\t\t{\n\t\t\t\"CatalogId\": \"{{AddProductCatalogId}}\",\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": 2,\n\t\t\t\"UnitCost\": 123.45\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products"
              },
              "response": []
            },
            {
              "_postman_id": "ea6db107-d4b7-4343-8f39-b53326fe7c99",
              "name": "05.02 - Add Product Fails Because No Items In List",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b64dcc3b-3e50-4da3-89e2-7aad141fd4d7",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Has Proper Error\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"PurchaseOrdersAndProducts\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrdersAndProducts\": [\n\t\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products"
              },
              "response": []
            },
            {
              "_postman_id": "0f6b1140-33f8-4805-8d78-2da252f80078",
              "name": "05.03 - Add Product Fails Because CatalogId Is Empty",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "55c53234-ca78-4f35-bb72-bcdddcb96ef4",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Has Proper Error\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"PurchaseOrdersAndProducts[0].CatalogId\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrdersAndProducts\": [\n\t\t{\n\t\t\t//\"CatalogId\": \"0D647B57-E94E-4982-AD89-60B0F69B8976\",\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": 2,\n\t\t\t\"UnitCost\": 123.45\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products"
              },
              "response": []
            },
            {
              "_postman_id": "e766c3b4-e310-4df6-bee7-53b994ce774d",
              "name": "05.04 - Add Product Fails Because PurchaseOrderGuid is empty",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0d36cd3c-c838-4635-afc2-b8ddcc278d30",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Has Proper Error\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"PurchaseOrdersAndProducts[0].PurchaseOrderGuid\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrdersAndProducts\": [\n\t\t{\n\t\t\t\"CatalogId\": \"{{AddProductCatalogId}}\",\n\t\t\t//\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": 2,\n\t\t\t\"UnitCost\": 123.45\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products"
              },
              "response": []
            },
            {
              "_postman_id": "2edfe9b4-dabe-48fb-b0a0-0ff60e8fd768",
              "name": "05.05 - Add Product Fails Because Quantity Is 0",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3a45158b-9c8e-44d8-86ea-3f4fc4abc8dd",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Has Proper Error\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"PurchaseOrdersAndProducts[0].Quantity\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrdersAndProducts\": [\n\t\t{\n\t\t\t\"CatalogId\": \"{{AddProductCatalogId}}\",\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": 0,\n\t\t\t\"UnitCost\": 123.45\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products"
              },
              "response": []
            },
            {
              "_postman_id": "8acba80e-4a1a-44ae-832c-d9294d11925a",
              "name": "05.06 - Add Product Fails Because Quantity Is Negative",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b119b898-4e91-4239-8645-9d618a5dbde7",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Has Proper Error\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"PurchaseOrdersAndProducts[0].Quantity\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrdersAndProducts\": [\n\t\t{\n\t\t\t\"CatalogId\": \"{{AddProductCatalogId}}\",\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": -1,\n\t\t\t\"UnitCost\": 123.45\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products"
              },
              "response": []
            },
            {
              "_postman_id": "298196b1-dbc4-4d7f-8ad2-a7185edbe444",
              "name": "05.07 - Add Product Fails Because Quantity Is Missing",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b119b898-4e91-4239-8645-9d618a5dbde7",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Has Proper Error\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"PurchaseOrdersAndProducts[0].Quantity\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrdersAndProducts\": [\n\t\t{\n\t\t\t\"CatalogId\": \"{{AddProductCatalogId}}\",\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t//\"Quantity\": -1,\n\t\t\t\"UnitCost\": 123.45\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products"
              },
              "response": []
            },
            {
              "_postman_id": "7ea8e92b-4bfb-4ceb-8c9c-4325c05d130a",
              "name": "05.08 - Add Product Fails Because UnitCost Is Negative",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b119b898-4e91-4239-8645-9d618a5dbde7",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Has Proper Error\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"PurchaseOrdersAndProducts[0].UnitCost\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrdersAndProducts\": [\n\t\t{\n\t\t\t\"CatalogId\": \"{{AddProductCatalogId}}\",\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": 1,\n\t\t\t\"UnitCost\": -123.45\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products"
              },
              "response": []
            },
            {
              "_postman_id": "5c66a012-3da8-4f8d-95ec-6c22542e1f7c",
              "name": "05.09 - Add Product Fails Because Bad Auth Token",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b119b898-4e91-4239-8645-9d618a5dbde7",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{BadAuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrdersAndProducts\": [\n\t\t{\n\t\t\t\"CatalogId\": \"{{AddProductCatalogId}}\",\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": 1,\n\t\t\t\"UnitCost\": 123.45\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products"
              },
              "response": []
            },
            {
              "_postman_id": "9df756b8-206a-4290-9bd1-89fbb8fb3206",
              "name": "05.10 - Add Product Fails Because Invalid Company",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b119b898-4e91-4239-8645-9d618a5dbde7",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrdersAndProducts\": [\n\t\t{\n\t\t\t\"CatalogId\": \"{{AddProductCatalogId}}\",\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": 1,\n\t\t\t\"UnitCost\": 123.45\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}1/PurchaseOrders/Products"
              },
              "response": []
            },
            {
              "_postman_id": "9602d9e2-299e-44b7-a3d9-37de378f845c",
              "name": "05.11 - Add Product Fails Because Do Not Order Product",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b119b898-4e91-4239-8645-9d618a5dbde7",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"DoNotOrderProduct\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrdersAndProducts\": [\n\t\t{\n\t\t\t\"CatalogId\": \"{{DoNotOrderProduct}}\",\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": 1,\n\t\t\t\"UnitCost\": 123.45\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products"
              },
              "response": []
            },
            {
              "_postman_id": "00dce45a-d392-4a04-9fdb-8afc4d664ec9",
              "name": "05.12 - Add Product Fails Because Discontinued Product",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b119b898-4e91-4239-8645-9d618a5dbde7",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"DiscontinuedProduct\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrdersAndProducts\": [\n\t\t{\n\t\t\t\"CatalogId\": \"{{DiscontinuedProduct}}\",\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": 1,\n\t\t\t\"UnitCost\": 123.45\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products"
              },
              "response": []
            },
            {
              "_postman_id": "97e1d282-ab8d-46aa-b78e-e8e5adacc671",
              "name": "05.13 - Add Product Fails Because Invalid Product Mapping",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b119b898-4e91-4239-8645-9d618a5dbde7",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"ProductMappingDoesNotExist\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrdersAndProducts\": [\n\t\t{\n\t\t\t\"CatalogId\": \"{{$guid}}\",\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": 1,\n\t\t\t\"UnitCost\": 123.45\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products"
              },
              "response": []
            },
            {
              "_postman_id": "0ff0ba83-b75a-4a73-a9b9-28f3cb22d7be",
              "name": "05.14 - Add Product Fails Because Wrong DB Auth Token",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a8c3ba0-0979-4e10-be1b-2e6a99226d3f",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{WrongDbAuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrdersAndProducts\": [\n\t\t{\n\t\t\t\"CatalogId\": \"{{AddProductCatalogId}}\",\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": 2,\n\t\t\t\"UnitCost\": 123.45\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products"
              },
              "response": []
            },
            {
              "_postman_id": "451b8693-dbf4-4305-8d11-5f1f019f8a4a",
              "name": "05.15 - Add Product Fails Because Product Vendor combination not exist",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a8c3ba0-0979-4e10-be1b-2e6a99226d3f",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Proper Error Present\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"ProductVendorCombinationUnavailable\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrdersAndProducts\": [\n\t\t{\n\t\t\t\"CatalogId\": \"{{NotInDistrictCatalogId}}\",\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": 2,\n\t\t\t\"UnitCost\": 123.45\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products"
              },
              "response": []
            },
            {
              "_postman_id": "e5d6003b-33c2-4f2a-8505-7938fbc915ae",
              "name": "05.16 - Add Product Fails Because Not an RGP",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0a8c3ba0-0979-4e10-be1b-2e6a99226d3f",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Proper Error Present\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"NotAnRGP\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrdersAndProducts\": [\n\t\t{\n\t\t\t\"CatalogId\": \"{{NotAnRgpProduct}}\",\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\",\n\t\t\t\"Quantity\": 2,\n\t\t\t\"UnitCost\": 123.45\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "7d4a8dc4-9161-4c59-95e0-4e6b4582b99d",
          "name": "06 - Complete Purchase Order",
          "description": "",
          "item": [
            {
              "_postman_id": "dc0222f6-01e9-4878-a303-b219aa3f057b",
              "name": "06.01 - Complete Purchase Order",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrderGuids\": [\n\t\t{\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderGuid}}\"\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/CompletePurchaseOrders"
              },
              "response": []
            },
            {
              "_postman_id": "04308df7-6b4d-4e65-b43a-86c3677c11c5",
              "name": "06.02 - Complete Purchase Order Fails Because No Items In List",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Has Proper Error\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderIds\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrderGuids\": [\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/CompletePurchaseOrders"
              },
              "response": []
            },
            {
              "_postman_id": "55fb792e-12d6-4dee-ab1b-c0c3017f3cb8",
              "name": "06.03 - Complete Purchase Order Fails Because PurchaseOrderGuid Is Empty",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Has Proper Error\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderIds[0].PurchaseOrderId\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrderGuids\": [\n\t\t{\n\t\t//\t\"PurchaseOrderGuid\": \"{{PurchaseOrderId}}\"\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/CompletePurchaseOrders"
              },
              "response": []
            },
            {
              "_postman_id": "98be0584-03d1-432c-9c1c-9e9382ffc2b6",
              "name": "06.04 - Complete Purchase Order Fails Because Bad Auth Token",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{BadAuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrderGuids\": [\n\t\t{\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderId}}\"\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/CompletePurchaseOrders"
              },
              "response": []
            },
            {
              "_postman_id": "a9c28fef-54a8-4577-bba6-dd8cd0887d11",
              "name": "06.05 - Complete Purchase Order Fails Because Invalid Company",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bdea2103-5d65-4dd1-a4c1-f2eb94cbd101",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{AuthToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"PurchaseOrderGuids\": [\n\t\t{\n\t\t\t\"PurchaseOrderGuid\": \"{{PurchaseOrderId}}\"\n\t\t}\n\t]\n}"
                },
                "url": "{{RqPurchaseOrdersUri}}/Companies/{{$randomInt}}/PurchaseOrders/CompletePurchaseOrders"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "d0792d9e-07f4-4500-a096-b2e734e4edeb",
          "name": "07 - Remove Product From Purchase Orders",
          "description": "",
          "item": [
            {
              "_postman_id": "9b3574b1-b25f-42ae-b59f-ddd64396e4cf",
              "name": "07.01 Request Fails Due To Malformed Request",
              "description": "",
              "item": [
                {
                  "_postman_id": "a3cbf152-884d-4729-980b-12480c979b0d",
                  "name": "PurchaseOrderGuids is not specified",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "80be3673-646b-4bf1-8a70-52b9eec06390",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b9090775-3975-4a92-93ab-ba5a85c5b740",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuids\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t//\"PurchaseOrderGuids\" : [\n\t//\t{ \n\t//\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t//\t},\n\t//\t{ \n\t//\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t//\t}\n\t//],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "771c8dd6-4312-4cdc-b16c-b5b05fe5dcac",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b9090775-3975-4a92-93ab-ba5a85c5b740",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuids\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t//\"PurchaseOrderGuids\" : [\n\t//\t{ \n\t//\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t//\t},\n\t//\t{ \n\t//\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t//\t}\n\t//],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "fa9fbee0-9ee3-48e1-ba43-0081301d2311",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b9090775-3975-4a92-93ab-ba5a85c5b740",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuids\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t//\"PurchaseOrderGuids\" : [\n\t//\t{ \n\t//\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t//\t},\n\t//\t{ \n\t//\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t//\t}\n\t//],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "63319ee9-57de-4f60-a12e-062d0788df3f",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b9090775-3975-4a92-93ab-ba5a85c5b740",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuids\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t//\"PurchaseOrderGuids\" : [\n\t//\t{ \n\t//\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t//\t},\n\t//\t{ \n\t//\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t//\t}\n\t//],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "20bee5b5-8d32-4c82-b49b-0ed2f74daa93",
                  "name": "PurchaseOrderGuids is null",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "4d47221b-f197-4566-8f52-0430365a2ac8",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1f12e573-e035-4b80-a957-06b432563c23",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuids\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : null,\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "73248ea0-cc0b-4be7-9dad-5e492ea2c501",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1f12e573-e035-4b80-a957-06b432563c23",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuids\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : null,\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "8ca47c8f-2ddf-4da0-84b7-a1e99efdb89d",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1f12e573-e035-4b80-a957-06b432563c23",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuids\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : null,\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "afd30819-c0b5-410a-af05-6d06c01785a3",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1f12e573-e035-4b80-a957-06b432563c23",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuids\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : null,\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "37fff856-5be8-4103-b569-e6ad4a8ddaaf",
                  "name": "PurchaseOrderGuids is empty",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "2925cdcf-97aa-4a94-bcbe-ce7fc5a5e7fe",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "38a81cdd-14f9-4eed-acf9-cb8474f96835",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuids\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{AuthToken}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t//\t{ \n\t//\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t//\t},\n\t//\t{ \n\t//\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t//\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "da980357-c28c-42fb-bb7b-d369fae68730",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "38a81cdd-14f9-4eed-acf9-cb8474f96835",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuids\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t//\t{ \n\t//\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t//\t},\n\t//\t{ \n\t//\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t//\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "fd2df5bf-9c2b-475f-a179-29e20929dfd8",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "38a81cdd-14f9-4eed-acf9-cb8474f96835",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuids\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t//\t{ \n\t//\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t//\t},\n\t//\t{ \n\t//\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t//\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "a681864d-1971-4e18-9fc6-871d2e5360b3",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "38a81cdd-14f9-4eed-acf9-cb8474f96835",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuids\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{AuthToken}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t//\t{ \n\t//\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t//\t},\n\t//\t{ \n\t//\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t//\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "93188b39-5e7f-4bfd-b4af-11dd3bf8d7cd",
                  "name": "PurchaseOrderGuid is null",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "b6dd1b6a-627a-46aa-966c-5069ee5a227e",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "be3c937f-a68e-4220-acf6-303e15d12624",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuids[0].PurchaseOrderGuid\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{AuthToken}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : null\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "1233a326-c085-4e42-b90b-6ba33ce41e88",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "be3c937f-a68e-4220-acf6-303e15d12624",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuids[0].PurchaseOrderGuid\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : null\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "20f95e09-0dfa-42e8-bd33-7918128fb80f",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "be3c937f-a68e-4220-acf6-303e15d12624",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuids[0].PurchaseOrderGuid\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : null\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "5e110403-4df1-4ad0-8125-ab412aff33ab",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "be3c937f-a68e-4220-acf6-303e15d12624",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuids[0].PurchaseOrderGuid\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : null\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "93e4075e-ef6d-4965-b557-e60d73276e43",
                  "name": "PurchaseOrderGuid is empty",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "9f140dde-83fa-4004-9c55-ee8d16651239",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "6bb6c6f0-74a5-4748-9cd3-560a08828707",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuid cannot be 00000000-0000-0000-0000-000000000000\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"00000000-0000-0000-0000-000000000000\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "eba5d06c-6170-4489-b165-eba7c1a3ac44",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "6bb6c6f0-74a5-4748-9cd3-560a08828707",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuid cannot be 00000000-0000-0000-0000-000000000000\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"00000000-0000-0000-0000-000000000000\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "0d9cc461-cefd-4f6b-85c9-886b3cb89897",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "6bb6c6f0-74a5-4748-9cd3-560a08828707",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuid cannot be 00000000-0000-0000-0000-000000000000\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"00000000-0000-0000-0000-000000000000\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "80a7b0cf-f032-40d5-814b-9de3ae8ef2f5",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "6bb6c6f0-74a5-4748-9cd3-560a08828707",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderGuid cannot be 00000000-0000-0000-0000-000000000000\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"00000000-0000-0000-0000-000000000000\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "16239d8f-5c60-4292-894e-a077485addd1",
                  "name": "RemoveProductsAssociatedWithOpenSalesOrders is null",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "5cb00a92-fefc-4dbf-9bcd-d51974627a6b",
                      "name": "CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "780e8554-d2b3-4337-8772-1b42b86a62c5",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"RemoveProductsAssociatedWithOpenSalesOrders\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{AuthToken}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : null,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "1203f129-221b-44c6-979d-6c322263f7fd",
                      "name": "CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "780e8554-d2b3-4337-8772-1b42b86a62c5",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"RemoveProductsAssociatedWithOpenSalesOrders\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : null,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "e96adc10-a367-4c82-be3e-724e6533ce38",
                  "name": "CompletePurchaseOrdersIfFullyReceived is null",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "73fbd848-5885-4124-994f-01298b0339b9",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "329178bf-eb53-4462-b50f-4b11248f2358",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"CompletePurchaseOrdersIfFullyReceived\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{AuthToken}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : null\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "d8505e4b-66cf-4746-a77d-db5ea45dac20",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "329178bf-eb53-4462-b50f-4b11248f2358",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"CompletePurchaseOrdersIfFullyReceived\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : null\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "c3c96ed7-4c97-495b-99dc-94693d45f41a",
                  "name": "Incorrect CompanyId",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "ce3353fc-a82e-45bd-b4d6-ee41f7f25e8c",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "46de6412-4c63-4c54-a690-e187a1031f97",
                            "exec": [
                              "pm.test(\"Status code is 401\", function () {",
                              "    pm.response.to.have.status(401);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{AuthToken}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}1/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "ad92bdf5-6f1a-4cf4-b2e9-fdbfa05ea206",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "46de6412-4c63-4c54-a690-e187a1031f97",
                            "exec": [
                              "pm.test(\"Status code is 401\", function () {",
                              "    pm.response.to.have.status(401);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}1/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "fb448cdc-3fdd-45ca-9366-020e075d060d",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "46de6412-4c63-4c54-a690-e187a1031f97",
                            "exec": [
                              "pm.test(\"Status code is 401\", function () {",
                              "    pm.response.to.have.status(401);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}1/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "d56ee2a4-e8bb-4ddd-9140-dd7058f1df0e",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "46de6412-4c63-4c54-a690-e187a1031f97",
                            "exec": [
                              "pm.test(\"Status code is 401\", function () {",
                              "    pm.response.to.have.status(401);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}1/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "8d6fe526-6879-446d-8c8d-c18bc94cd9c8",
                  "name": "CatalogId is empty",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "6ac7ae1d-e42f-4c23-8a80-888fadf26cc4",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "92139ed6-e783-4c25-bfa2-3b5a3fa6224a",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"catalogId cannot be 00000000-0000-0000-0000-000000000000\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{AuthToken}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/00000000-0000-0000-0000-000000000000/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "53e59bc0-2457-492d-ad17-352b33f292f0",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "92139ed6-e783-4c25-bfa2-3b5a3fa6224a",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"catalogId cannot be 00000000-0000-0000-0000-000000000000\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/00000000-0000-0000-0000-000000000000/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "56c98697-7b52-4396-90e7-3193230e1852",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "92139ed6-e783-4c25-bfa2-3b5a3fa6224a",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"catalogId cannot be 00000000-0000-0000-0000-000000000000\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/00000000-0000-0000-0000-000000000000/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "31967595-7578-45e1-9481-70c9aba2e9bd",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "92139ed6-e783-4c25-bfa2-3b5a3fa6224a",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"catalogId cannot be 00000000-0000-0000-0000-000000000000\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/00000000-0000-0000-0000-000000000000/Remove"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "f053a8da-13e7-4b4e-b1d1-f4f7a593e5b4",
                  "name": "Invalid Token",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "e7f48f30-3a63-45ba-8c8e-39f1e02617e6",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2bdb10b7-e3ce-41c4-831b-a1428e7a9a98",
                            "exec": [
                              "pm.test(\"Status code is 401\", function () {",
                              "    pm.response.to.have.status(401);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{BadAuthToken}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "68350fd6-6001-4db7-a30c-fbadcadbc2b6",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2bdb10b7-e3ce-41c4-831b-a1428e7a9a98",
                            "exec": [
                              "pm.test(\"Status code is 401\", function () {",
                              "    pm.response.to.have.status(401);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{BadAuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "35301294-8b88-4a17-a694-59fca1b26b9e",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2bdb10b7-e3ce-41c4-831b-a1428e7a9a98",
                            "exec": [
                              "pm.test(\"Status code is 401\", function () {",
                              "    pm.response.to.have.status(401);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{BadAuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "b85109f4-67c6-43ca-b605-4eb3685fc059",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2bdb10b7-e3ce-41c4-831b-a1428e7a9a98",
                            "exec": [
                              "pm.test(\"Status code is 401\", function () {",
                              "    pm.response.to.have.status(401);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{BadAuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "a437b960-5142-416c-95b8-a225545e67d1",
                  "name": "Wrong DB Auth Token",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "803a14c6-c6c6-49f7-86ce-77d4c461adc6",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "024b7f91-a6b3-43ab-8df2-8bb0ab4ea247",
                            "exec": [
                              "pm.test(\"Status code is 401\", function () {",
                              "    pm.response.to.have.status(401);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{WrongDbAuthToken}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "22c3e2ad-e745-4859-ba48-636a978ae3e2",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "024b7f91-a6b3-43ab-8df2-8bb0ab4ea247",
                            "exec": [
                              "pm.test(\"Status code is 401\", function () {",
                              "    pm.response.to.have.status(401);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{WrongDbAuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "5979ae31-b21c-47d4-a66f-8dfcca71facf",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "024b7f91-a6b3-43ab-8df2-8bb0ab4ea247",
                            "exec": [
                              "pm.test(\"Status code is 401\", function () {",
                              "    pm.response.to.have.status(401);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{WrongDbAuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "94b54391-373d-46a6-bbca-3fe1c81cf3f4",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "024b7f91-a6b3-43ab-8df2-8bb0ab4ea247",
                            "exec": [
                              "pm.test(\"Status code is 401\", function () {",
                              "    pm.response.to.have.status(401);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{WrongDbAuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ff04f7f2-54e4-4a23-a492-7b89fd765e64",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "cf2f9dab-8c96-41bc-8df0-347cfbb85eab",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "8eeea6aa-1680-483c-9a58-4a8805545cc8",
              "name": "07.02 Request Fails Due To RQ Database Validation Errors",
              "description": "",
              "item": [
                {
                  "_postman_id": "9d6ddb48-0a87-47de-b196-469b07be71de",
                  "name": "Product Mapping Does Not Exist",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "abd6a64c-443f-4d25-adfb-25e7de9b1183",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "92139ed6-e783-4c25-bfa2-3b5a3fa6224a",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"ProductMappingDoesNotExist\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{$guid}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "2594cd4a-4c24-4755-a2fe-61b5238b4b22",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "92139ed6-e783-4c25-bfa2-3b5a3fa6224a",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"ProductMappingDoesNotExist\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{$guid}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "cb9b50c9-0bdd-450f-8e43-d7c837239f05",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "92139ed6-e783-4c25-bfa2-3b5a3fa6224a",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"ProductMappingDoesNotExist\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{$guid}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "c37f5473-a2f1-4ea0-b741-cb5da85a0079",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "92139ed6-e783-4c25-bfa2-3b5a3fa6224a",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"ProductMappingDoesNotExist\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{$guid}}/Remove"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "070043e7-ac61-484f-981c-166b895e2609",
                  "name": "Purchase Order Completed",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "abcfad39-06d3-4c5b-affc-ba1b4f9304db",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2bdb10b7-e3ce-41c4-831b-a1428e7a9a98",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderCompleted\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{CompletedPurchaseOrderGuid}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "79d22627-88a3-4179-b8ec-59788daae30b",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders false, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2bdb10b7-e3ce-41c4-831b-a1428e7a9a98",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderCompleted\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{CompletedPurchaseOrderGuid}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : false,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "77af1369-1274-40ec-b839-72d89b843943",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived false",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2bdb10b7-e3ce-41c4-831b-a1428e7a9a98",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderCompleted\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{CompletedPurchaseOrderGuid}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : false\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "2840eb2f-6fd8-4c45-be1d-17a9f2413efd",
                      "name": "RemoveProductsAssociatedWithOpenSalesOrders true, CompletePurchaseOrdersIfFullyReceived true",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2bdb10b7-e3ce-41c4-831b-a1428e7a9a98",
                            "exec": [
                              "pm.test(\"Status code is 400\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});",
                              "",
                              "pm.test(\"Proper error present\", function () {",
                              "    pm.expect(pm.response.text()).to.include(\"PurchaseOrderCompleted\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{AuthToken}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"PurchaseOrderGuids\" : [\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{PurchaseOrderGuid2}}\"\n\t\t},\n\t\t{ \n\t\t\t\"PurchaseOrderGuid\" : \"{{CompletedPurchaseOrderGuid}}\"\n\t\t}\n\t],\n\t\"RemoveProductsAssociatedWithOpenSalesOrders\" : true,\n\t\"CompletePurchaseOrdersIfFullyReceived\" : true\n}"
                        },
                        "url": "{{RqPurchaseOrdersUri}}/Companies/{{CompanyEntityId}}/PurchaseOrders/Products/{{CatalogId}}/Remove"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "3fc607b3-1504-4189-ba85-8ea9fab94496",
                  "name": "Product Already On Shipment Notice",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": ""
                  },
                  "response": []
                },
                {
                  "_postman_id": "f488aa5d-6035-441d-ad16-8e406746e2ee",
                  "name": "Product Already Received",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": ""
                  },
                  "response": []
                },
                {
                  "_postman_id": "27f20c01-8787-4da9-b8a2-8680e0abaf04",
                  "name": "Product Associated With Open Sales Order",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": ""
                  },
                  "response": []
                },
                {
                  "_postman_id": "0eb0df8c-ff72-4627-a2b3-a7acd5fe48a0",
                  "name": "Committed Purchase Order Cannot Be Deleted But Will Have No Ordered Products",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": ""
                  },
                  "response": []
                },
                {
                  "_postman_id": "7899002e-94a6-4a05-ac02-463c117a3674",
                  "name": "Purchase Order With Shipment Notices Cannot Be Deleted But Will Have No Ordered Products",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": ""
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "1292f1b7-703d-4399-962f-df4ea379d394",
              "name": "07.03 Request Succeeds",
              "description": "",
              "item": [
                {
                  "_postman_id": "ee26c190-335b-474a-aa7c-2c414cfbaa7f",
                  "name": "Request Succeeds",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": ""
                  },
                  "response": []
                },
                {
                  "_postman_id": "d160ee50-a4b9-4eff-a875-85d9294803ba",
                  "name": "RemoveProductsAssociatedWithOpenSalesOrders is false when not specified",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": ""
                  },
                  "response": []
                },
                {
                  "_postman_id": "d1754abb-343b-455b-94be-0eea44845e43",
                  "name": "CompletePurchaseOrdersIfFullyReceived is false when not specified",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": ""
                  },
                  "response": []
                },
                {
                  "_postman_id": "8739536d-b1f4-46bf-b395-032f6bb22b38",
                  "name": "Succeeds when PurchaseOrderGuid doesn't map to any PO",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": ""
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "0cafea12-8c83-4704-b772-ab2a12ff3128",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "5165d3fa-e3c4-46f7-8ec1-14232934c698",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}